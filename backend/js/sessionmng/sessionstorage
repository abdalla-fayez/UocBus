const express = require('express');
const router = express.Router();

// Middleware to parse JSON request bodies
router.use(express.json()); // Ensures req.body is parsed
router.use(express.urlencoded({ extended: true })); // Optional: For form-encoded data

// Store trip details in session
router.post('/api/session/trip/store', (req, res) => {
    console.log('Request Body:', req.body);
    console.log('Session Object:', req.session); // Debugging: Log the session object

    if (!req.session) {
        return res.status(500).json({ message: 'Session is not initialized' });
    }

    const { tripId, seatsBooked } = req.body;

    if (!tripId || !seatsBooked || seatsBooked <= 0) {
        console.error('Invalid data:', { tripId, seatsBooked });
        return res.status(400).json({ message: 'Invalid trip or seat data' });
    }

    req.session.tripDetails = { tripId, seatsBooked };
    console.log('Session Updated:', req.session.tripDetails);

    res.json({ success: true });
});


// Retrieve trip details from session
router.get('/api/session/trip/retrieve', (req, res) => {
    console.log('Retrieving Trip Details from Session:', req.session);

    if (!req.session || !req.session.tripDetails) {
        return res.status(404).json({ message: 'No trip details found' });
    }

    res.json(req.session.tripDetails);
});

module.exports = router;
